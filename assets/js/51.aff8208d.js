(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{600:function(n,t,e){"use strict";e.r(t);var s=e(2),o=Object(s.a)({},(function(){var n=this.$createElement,t=this._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("p",[t("strong",[this._v("1.new")])]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("function myNew(fn, ...args) {\n    // 1.定义一个空对象\n    const obj = {};\n    // 2.隐式原型指向构造函数的显式原型\n    obj.__proto__ = fn.prototype;\n    // 3.执行构造函数，this执向空对象\n    fn.apply(obj, args);\n    // 4.返回对象\n    return obj;\n}\n")])])]),t("p",[t("strong",[this._v("2.测试代码")])]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>Document</title>\n  </head>\n  <body>\n    <script>\n      function myNew(fn, ...args) {\n        // 1.定义一个空对象\n        const obj = {};\n        // 2.隐式原型指向构造函数的显式原型\n        obj.__proto__ = fn.prototype;\n        // 3.执行构造函数，this执向空对象\n        fn.apply(obj, args);\n        // 4.返回对象\n        return obj;\n      }\n      // 使用示例\n      function Person(name, age) {\n        this.name = name;\n        this.age = age;\n      }\n      // 使用myNew创建Person的实例\n      const person = myNew(Person, "martin", 24);\n      console.log(person.name); // 输出 "martin"\n      console.log(person.age); // 输出 24\n    <\/script>\n  </body>\n</html>\n')])])])])}),[],!1,null,null,null);t.default=o.exports}}]);